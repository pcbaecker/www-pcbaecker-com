<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Philipp C. Baecker</title><link>https://www.pcbaecker.com/posts/</link><description>Recent content in Posts on Philipp C. Baecker</description><image><url>https://www.pcbaecker.com/papermod-cover.png</url><link>https://www.pcbaecker.com/papermod-cover.png</link></image><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 09 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.pcbaecker.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>How to setup ArgoCD to manage itself</title><link>https://www.pcbaecker.com/posts/setup-argocd/</link><pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate><guid>https://www.pcbaecker.com/posts/setup-argocd/</guid><description>ArgoCD is in my opinion one of the best GitOps-Tools available. It checks a given Git-Repo and applies the configuration from there to a kubernetes cluster. The setup described in the ArgoCD-Guide using a single .yaml file is easy and straight forward. But from there you have to manually update and control ArgoCD whereas the rest of software will be controlled by ArgoCD. To also have ArgoCD update and configure itself it not much harder.</description></item><item><title>How to setup a k3s server with alpine linux</title><link>https://www.pcbaecker.com/posts/setup-home-k3s-server-with-alpine/</link><pubDate>Fri, 31 Dec 2021 09:34:33 +0000</pubDate><guid>https://www.pcbaecker.com/posts/setup-home-k3s-server-with-alpine/</guid><description>I bought the new Macbook Pro with M1 Pro. The power of that device deprecates my Ryzen 3700X and so I decided to use that one as a server. I measured the power consumption with GPU (RX580) attached at about 90W and without at about 50W. So I used the GPU while installation and removed it afterwards.
As OS I decided to use Alpine Linux Extended version because it is very lightweight.</description></item><item><title>GRPC-Web example</title><link>https://www.pcbaecker.com/posts/grpc-web-example/</link><pubDate>Thu, 16 Dec 2021 16:00:00 +0000</pubDate><guid>https://www.pcbaecker.com/posts/grpc-web-example/</guid><description>There are dozens of articles out there describing the beneftits of GRPC over JSON. With this little example I wanted to evaluate the complexity of GRPC in combination with a frontend. Because GRPC always uses HTTP/2.0 and that is not supported by all browsers there is GRPC-Web which translates between &amp;lsquo;real&amp;rsquo; GRPC and and the web version for the browsers.
The project has three main components:
The GRPC-Server The GRPC-Web proxy The Angular frontend Protobuf file One benefit of GRPC is, that backend and frontend can generate their models and API&amp;rsquo;s from the common .</description></item><item><title>How to host a static website for free</title><link>https://www.pcbaecker.com/posts/how-to-host-a-website-for-free/</link><pubDate>Mon, 18 Oct 2021 09:34:33 +0000</pubDate><guid>https://www.pcbaecker.com/posts/how-to-host-a-website-for-free/</guid><description>If you have a static website that should be served, there is no need for a hoster that costs money. You can use Google Clouds Object Storage or Github Pages like i did.
I use Hugo a static website generator to transform the raw text written in MarkDown into a static website. The transformation is handled automatically by Github Actions when i commit my local workspace to the Github repository.</description></item></channel></rss>